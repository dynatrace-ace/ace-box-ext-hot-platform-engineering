# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# default:
#   image: docker:24.0.5
#   services:
#     - docker:24.0.5-dind
#   before_script:
#     - docker info

# variables:
#   # When using dind service, you must instruct Docker to talk with
#   # the daemon started inside of the service. The daemon is available
#   # with a network connection instead of the default
#   # /var/run/docker.sock socket.
#   DOCKER_HOST: tcp://docker:2376
#   #
#   # The 'docker' hostname is the alias of the service container as described at
#   # https://docs.gitlab.com/ee/ci/services/#accessing-the-services.
#   # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
#   # the variable must be set to tcp://localhost:2376 because of how the
#   # Kubernetes executor connects services to the job container
#   # DOCKER_HOST: tcp://localhost:2376
#   #
#   # Specify to Docker where to create the certificates. Docker
#   # creates them automatically on boot, and creates
#   # `/certs/client` to share between the service and job
#   # container, thanks to volume mount from config.toml
#   DOCKER_TLS_CERTDIR: '/certs'
#   # These are usually specified by the entrypoint, however the
#   # Kubernetes executor doesn't run entrypoints
#   # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125
#   DOCKER_TLS_VERIFY: 1
#   DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'

# build:
#   stage: build
#   script:
#     - docker build -t simplenodeservice .

variables:
  IMAGE_NAME: '$DOCKER_REGISTRY_URL/${{ values.name }}'
  IMAGE_TAG: '0.0.0'

Build Image:
  image: docker:20.10.16
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: '/certs'
    DOCKER_TLS_VERIFY: 0
    DOCKER_CERT_PATH: '$DOCKER_TLS_CERTDIR/client'
    DOCKER_DAEMON_OPTIONS: '--insecure-registry=$DOCKER_REGISTRY_URL'
  services:
    - name: docker:20.10.16-dind
      entrypoint: ['sh', '-c', 'dockerd-entrypoint.sh $DOCKER_DAEMON_OPTIONS']
  before_script:
    - until docker info; do sleep 1; done
  script:
    - docker info
    - docker build --build-arg BUILD_NUMBER="1" -t "$IMAGE_NAME:$IMAGE_TAG" .
    - docker push "$IMAGE_NAME:$IMAGE_TAG"
